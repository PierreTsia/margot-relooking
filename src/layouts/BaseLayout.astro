---
import '@/styles/globals.css';
import { Header } from '@/components/Header';
import { ViewTransitions } from 'astro:transitions';

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="fr">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <script
      type="text/javascript"
      src="https://cdn.jsdelivr.net/npm/netlify-identity-widget@1/build/netlify-identity-widget.min.js"
    ></script>
    <script>
      interface NetlifyUser {
        email: string;
        app_metadata: {
          provider: string;
        };
        user_metadata: {
          avatar_url: string;
          full_name: string;
        };
      }

      if (window.netlifyIdentity) {
        window.netlifyIdentity.on('init', (user: NetlifyUser | null) => {
          if (!user) {
            window.netlifyIdentity.on('login', () => {
              document.location.href = '/admin/';
            });
          }
        });
      }
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@500;600;700&display=swap" rel="stylesheet">
    <meta name="generator" content={Astro.generator} />
    <ViewTransitions />
  </head>
  <body class="text-text-primary bg-[hsl(40,33%,99%)]">
    <Header client:load />
    <slot />
    <script>
      if (
        window.location.hash &&
        window.location.hash.includes('invite_token')
      ) {
        const token = window.location.hash.split('=')[1];

        // Wait for netlifyIdentity to be available
        const checkIdentity = setInterval(() => {
          if ((window as any).netlifyIdentity) {
            clearInterval(checkIdentity);

            (window as any).netlifyIdentity.open();
            (window as any).netlifyIdentity.on('init', (user: any) => {
              if (!user) {
                (window as any).netlifyIdentity.on('login', () => {
                  document.location.href = '/admin/';
                });
              } else {
                document.location.href = '/admin/';
              }
            });
          }
        }, 100);
      }
    </script>
  </body>
</html>

