---
import BaseLayout from './BaseLayout.astro';
import { Image } from 'astro:assets';
import { ArrowRight, BookOpen, ArrowLeft } from 'lucide-react';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BlogCard from '@/components/blog-card.astro';
import { Card } from '@/components/ui/card';
import { BlogNavigation } from '@/components/blog-navigation';

interface Props {
  title: string;
  date: Date;
  image?: string;
  description: string;
  tags?: string[];
  prevPost?: CollectionEntry<'blog'>;
  nextPost?: CollectionEntry<'blog'>;
}

const { title, date, image, description, tags = [], prevPost, nextPost } = Astro.props;

// Get related posts by shared tags
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(post => 
    // Exclude current post and drafts
    post.data.title !== title && !post.data.draft &&
    // Must share at least one tag
    post.data.tags?.some(tag => tags.includes(tag))
  )
  .sort(() => Math.random() - 0.5) // Randomize order
  .slice(0, 3); // Take up to 3 related posts

---

<BaseLayout 
  title={title}
  description={description}
  image={image}
>
  <main class="py-12">
    <div class="mx-auto max-w-4xl px-4">
      <article class="prose prose-lg">
        <header class="mb-8">
          <h1 class="text-primary-dark mb-4 font-display text-4xl">
            {title}
          </h1>
          <time class="text-text-secondary" datetime={date.toISOString()}>
            {
              new Date(date).toLocaleDateString('fr-FR', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
              })
            }
          </time>
        </header>

        {
          image && (
            <Image
              src={image}
              alt=""
              width={800}
              height={400}
              class="mb-8 rounded-lg"
            />
          )
        }

        <div class="prose prose-lg prose-pink">
          <slot />
        </div>

        <nav class="mt-12 flex flex-col gap-4 border-t border-primary/5 pt-8 sm:flex-row sm:justify-between min-w-full">
          <BlogNavigation prevPost={prevPost} nextPost={nextPost} />
        </nav>
      </article>
    </div>

    {relatedPosts.length > 0 && (
      <div class="relative mt-24 bg-primary/[0.03]">
        <div class="mx-auto max-w-4xl px-4 py-16">
          <h2 class="text-2xl font-display mb-8">Articles similaires</h2>
          <div class="grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
            {relatedPosts.map(post => (
              <BlogCard 
                post={post} 
                showTags={false} 
                showMeta={false} 
                compact 
              />
            ))}
          </div>
        </div>
      </div>
    )}
  </main>
</BaseLayout>

